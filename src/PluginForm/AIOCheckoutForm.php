<?php

namespace Drupal\commerce_ecpay\PluginForm;


use Drupal\commerce_payment\PluginForm\PaymentOffsiteForm;
use Drupal\Core\Form\FormStateInterface;

class AIOCheckoutForm extends PaymentOffsiteForm {

  /**
   * @inheritDoc
   */
  public function buildConfigurationForm(array $form, FormStateInterface $form_state) {
    $form = parent::buildConfigurationForm($form, $form_state); // TODO: Change the autogenerated stub
    /** @var \Drupal\commerce_payment\Entity\PaymentInterface $payment */
    $payment = $this->entity;
    /** @var \Drupal\commerce_ecpay\Plugin\Commerce\PaymentGateway\AIOCheckoutPaymentGatewayInterface $payment_gateway */
    $payment_gateway = $payment->getPaymentGateway()->getPlugin();

    $extra = [
      'return_url' => $form['#return_url'],
    ];

    $params = $payment_gateway->checkout($payment, $extra);
    $payment_url = $payment_gateway->getPaymentUrl('/Cashier/AioCheckOut/V5');

    $redirect_form = $this->buildRedirectForm($form, $form_state, $payment_url, $params, self::REDIRECT_POST);
    $redirect_form['commerce_message']['#process'][] = [get_class($this), 'processCleanValues'];
    $redirect_form['#cache'] = [
      'max-age' => 0,
    ];

    return $redirect_form;
  }

  public static function processCleanValues(array $element, FormStateInterface $form_state, array &$complete_form) {
    unset($complete_form['form_token']);
    unset($complete_form['form_id']);
    unset($complete_form['form_build_id']);
    return $element;
  }
}
